{"version":3,"file":"component---src-pages-blog-tsx-6619938a8775bb55592d.js","mappings":"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","sources":["webpack://scostadavid.github.io/./src/components/ui/Button/index.tsx","webpack://scostadavid.github.io/./src/components/Header/index.tsx","webpack://scostadavid.github.io/./src/components/Footer/index.tsx","webpack://scostadavid.github.io/./src/components/Layout/index.tsx","webpack://scostadavid.github.io/./src/hooks/useSiteMetada.ts","webpack://scostadavid.github.io/./src/components/SEO/index.tsx","webpack://scostadavid.github.io/./src/components/Typography/index.tsx","webpack://scostadavid.github.io/./src/components/post-list.tsx","webpack://scostadavid.github.io/./src/pages/blog.tsx","webpack://scostadavid.github.io/./node_modules/classnames/index.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport const Button = ({className, children, onClick}: {className?: string, children: JSX.Element | string, onClick?: any}) => {\r\n  return (\r\n    <button\r\n      className={\r\n        classNames(\r\n          \"bg-cta text-white font-bold rounded\",\r\n          \"py-2 px-4 rounded\",\r\n          className\r\n        )\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Button } from \"../ui/Button\";\n\nexport const Header = ({theme, toggleTheme}: any): JSX.Element => {\n  return (\n    <header className=\" items-center\">\n      <div className=\"flex flex-row justify-between max-w-3xl mx-auto px-8 py-8\">\n          <Link to=\"/\" className=\"text-cta font-bold text-2xl align-middle self-center \">\n            {'scostadavid'}\n          </Link>\n\n          <Button aria-label=\"theme-switcher\" className=\"flex border-1 border border-card bg-cta text-white font-bold rounded rounded bg-transparent hover:bg-transparent relative justify-center items-center align-middle\" onClick={toggleTheme}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              className={`feather feather-sun absolute transition-all duration-500 ease-in-out ${theme === 'dark' ? 'opacity-100 transform scale-100 rotate-0 text-cta' : 'opacity-0 transform scale-0 rotate-45 text-cta'}`}\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n              <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n              <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n              <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n              <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n              <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n              <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n              <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n              <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n            </svg>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              className={`feather feather-moon absolute transition-all duration-500 ease-in-out ${theme === 'dark' ? 'opacity-0 transform scale-0 rotate-45 text-cta' : 'opacity-100 transform scale-100 rotate-0 text-cta'}`}\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n            </svg>\n          </Button>\n      </div>\n    </header>\n  )\n}\n","import React from 'react';\nimport { H2 } from '../Typography';\n\nexport const Footer = (): JSX.Element => {\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-3xl mx-auto px-8 py-8\">\n        <a className=\"text-content\" href={'https://github.com/scostadavid'} target={'_blank'} rel={'noreferrer noopener'}>\n          &copy; 2024 scostadavid. All rights reserved.\n        </a>\n      </div>\n    </footer>\n  )\n}","import React, {useEffect, useState} from \"react\"\r\nimport {Header} from \"../Header\"\r\nimport {Footer} from \"../Footer\"\r\nimport \"../../styles/global.css\"\r\n\r\nexport const Layout = ({ children }: any) => {\r\n  const [theme, setTheme] = useState<string>(\"dark\");\r\n\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem(\"theme\") || \"dark\";\r\n    setTheme(storedTheme);\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(storedTheme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"theme\", theme);\r\n    }\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-background min-h-screen ${theme}`}>\r\n      <Header theme={theme} toggleTheme={toggleTheme} />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../../hooks/useSiteMetada\"\r\n\r\ninterface SEO { title?: string, description?: string, pathname?: string, children?: any };\r\n\r\nexport const SEO = ({ title, description, pathname, children }: SEO) => {\r\n  const { title: defaultTitle, description: defaultDescription, siteUrl, } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content=\"scostadavid blog, software developer\"/>\r\n      <meta name=\"keywords\" content=\"scostadavid, David Costa, software developer, full stack, portfolio, projects, skills, experience\"/>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n      <meta name=\"author\" content=\"David Costa\"/>\r\n      \r\n      <meta name=\"description\" content={seo.description} />\r\n      {/* <meta name=\"image\" content={seo.image} /> */}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      {/* <meta name=\"twitter:image\" content={seo.image} /> */}\r\n      {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👨‍💻</text></svg>\" />\r\n      {children}\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\ninterface H1 {\n  className?: string;\n  children?: React.ReactNode | string;\n}\n\nconst H1 = ({className, children} : H1) => {\n  return (\n    <h1 className={\n      classNames(\n        \"text-content font-bold text-3xl mb-4\",\n        className\n      )\n    }>\n      {children}\n    </h1>\n  );\n}\n\ninterface H2 {\n  className?: string;\n  text: string;\n}\n\nconst H2 = ({className, text} : H2) => {\n  return (\n    <h2 className={\n      classNames(\n        \"font-bold text-2xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h2>\n  );\n}\n\nconst Paragraph = ({children} : {children: string}) => {\n  return (\n    <p className=\"text-content text-lg mb-4\">\n      {children}\n    </p>\n  );\n}\n\ninterface Span {\n  className?: string,\n  children?: JSX.Element | string\n}\nconst Span = ({className, children} : Span): JSX.Element => {\n  return (\n    <span className={\n      classNames(\n        className\n      )\n    }>\n      {children}\n    </span>\n  );\n}\n\nconst MS_INTERVAL: number = 50;\n\ninterface TypeMachineParagraph {\n  quote: string\n};\nconst TypeMachineParagraph = ({quote}: TypeMachineParagraph): JSX.Element => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setIndex(index + 1), MS_INTERVAL);\n    return () => clearInterval(interval);\n  }, [index]);\n\n  return (\n    <>\n      <Span>{' 👋 '}</Span>\n      {quote.substring(0, index)}\n    </>\n  );\n}\n\nexport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph,\n  Span,\n}","import React from 'react';\nimport { Link } from 'gatsby';\n\ninterface Post {\n  id: string;\n  frontmatter: {\n    title: string;\n    date: string;\n    description?: string;\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface PostListProps {\n  posts: Post[];\n  limit?: number; \n}\n\nexport const PostList: React.FC<PostListProps> = ({ posts, limit }) => {\n  const displayedPosts = limit ? posts.slice(0, limit) : posts;\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      {displayedPosts.map((post) => (\n        <article\n          key={post.id}\n          className=\"flex flex-col pb-4\"\n        >\n          <Link\n            to={`/blog/${post.fields.slug}`}\n            className=\"text-content dark:text-neutral-50 text-xl font-semibold mb-4 hover:text-highlight\"\n          >\n            {post.frontmatter.title}\n          </Link>\n          <time\n            dateTime={new Date(post.frontmatter.date).toISOString()}\n            className=\"text-sm text-neutral-500\"\n          >\n            {new Date(post.frontmatter.date).toLocaleDateString(undefined, {\n              day: '2-digit',\n              month: 'short',\n              year: 'numeric',\n            })}\n          </time>\n          {/* {post.frontmatter.description && (\n            <p className=\"mt-2 text-neutral-400\">{post.frontmatter.description}</p>\n          )} */}\n        </article>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { SEO } from '../components/SEO';\nimport { H1, H2, Span } from '../components/Typography';\nimport { Link } from 'gatsby';\nimport { graphql, PageProps } from 'gatsby';\nimport { PostList } from '../components/post-list';\n\ninterface Post {\n  id: string;\n  frontmatter: {\n    title: string;\n    date: string;\n    description?: string;\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface BlogPageProps extends PageProps {\n  data: {\n    allMarkdownRemark: {\n      nodes: Post[];\n    };\n  };\n}\n\nconst BlogPage: React.FC<BlogPageProps> = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout>\n      <section className=\"text-slate-200\">\n        <div className=\"max-w-3xl mx-auto px-8 py-16\">\n          <header className=\"mb-12\">\n            <H1 className=\"font-bold text-2xl mb-4\">Blog</H1>\n            <p className=\"text-content text-lg leading-relaxed max-w-3xl mx-auto\">\n              Explore my latest articles and tutorials on software development.\n            </p>\n          </header>\n          \n          <PostList posts={posts} />\n        </div>\n      </section>\n\n      <SEO\n        title=\"scostadavid | Blog\"\n        description=\"Explore my latest articles and tutorials on software development.\"\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Button","_ref","className","children","onClick","React","classNames","Header","theme","toggleTheme","Link","to","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","d","Footer","href","target","rel","Layout","setTheme","useState","useEffect","storedTheme","localStorage","getItem","document","body","classList","remove","add","window","setItem","prev","SEO","title","description","pathname","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","name","content","H1","H2","_ref2","text","Span","_ref4","PostList","posts","limit","displayedPosts","slice","map","post","key","id","fields","slug","frontmatter","dateTime","Date","date","toISOString","toLocaleDateString","undefined","day","month","year","data","allMarkdownRemark","nodes","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","call","value","newClass","module","exports","default"],"sourceRoot":""}