{"version":3,"file":"component---src-pages-index-tsx-49ecfa83268bd21aa8e3.js","mappings":"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","sources":["webpack://scostadavid.github.io/./src/components/Typography/index.tsx","webpack://scostadavid.github.io/./src/components/Header/index.tsx","webpack://scostadavid.github.io/./src/components/Footer/index.tsx","webpack://scostadavid.github.io/./src/components/ui/Button/index.tsx","webpack://scostadavid.github.io/./src/data/projects.ts","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://scostadavid.github.io/./src/data/contact.ts","webpack://scostadavid.github.io/./src/pages/index.tsx","webpack://scostadavid.github.io/./node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\ninterface H1 {\n  className?: string;\n  text: string;\n}\n\nconst H1 = ({className, text} : H1) => {\n  return (\n    <h1 className={\n      classNames(\n        \"text-black font-bold text-4xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h1>\n  );\n}\n\ninterface H2 {\n  className?: string;\n  text: string;\n}\n\nconst H2 = ({className, text} : H2) => {\n  return (\n    <h2 className={\n      classNames(\n        \"font-bold text-2xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h2>\n  );\n}\n\nconst Paragraph = ({children} : {children: string}) => {\n  return (\n    <p className=\"text-black text-lg mb-4\">\n      {children}\n    </p>\n  );\n}\n\nconst Span = ({children} : {children: string}) => {\n  return (\n    <span className=\"text-black\">\n      {children}\n    </span>\n  );\n}\n\nconst MS_INTERVAL: number = 50;\n\ninterface TypeMachineParagraph {\n  quote: string\n};\nconst TypeMachineParagraph = ({quote}: TypeMachineParagraph): JSX.Element => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setIndex(index + 1), MS_INTERVAL);\n    return () => clearInterval(interval);\n  }, [index]);\n\n  return (\n    <>\n      <Span>{' 👋 '}</Span>\n      {quote.substring(0, index)}\n    </>\n  );\n}\n\nexport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph,\n  Span,\n}","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default (): JSX.Element => {\n  return (\n    <header className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"flex flex-row max-w-xl p-4 mx-auto\">\n        <Link to=\"/\">\n          <p className=\"text-[#005aee] font-bold text-2xl\">{'scostadavid'}</p>\n        </Link>\n      </div>\n    </header>\n  )\n}","import React from 'react';\nimport { H2 } from '../Typography';\n\nexport const Footer = (): JSX.Element => {\n  return (\n    <footer className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <a className=\"text-black\" href={'https://github.com/scostadavid'} target={'_blank'} rel={'noreferrer noopener'}>\n          &copy; 2024{' - '}scostadavid\n        </a>\n      </div>\n    </footer>\n  )\n}","import React from 'react';\r\n\r\nexport const Button = ({children}: {children: JSX.Element | string}) => {\r\n  return (\r\n    <button\r\n      className=\" border-black border-2 p-4 bg-[#fff] hover:bg-[#fff] hover:shadow-[2px_2px_0px_rgba(0,0,0,1)] active:bg-[#fff] rounded-md\"\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","export const projects = [\r\n  {\r\n    id: 1,\r\n    title: '🦎 Chameleon',\r\n    description: 'A URL shortener that helps digital marketers track campaigns performance',\r\n    url: 'https://github.com/scostadavid/chameleon',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '🎯 Focus Nook',\r\n    description: 'A productivity app that helps users focus and complete tasks more efficiently',\r\n    url: 'https://scostadavid.github.io/focusnook/',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '🦐 Shrimp.css',\r\n    description: 'A CSS framework that makes it easy to style markdown-generated HTML pages',\r\n    url: 'https://scostadavid.github.io/shrimp.css',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '🕹️ Dawn\\'s Lighthouse',\r\n    description: 'A platformer game about a sailor trapped in a lighthouse',\r\n    url: 'https://gamejolt.com/games/dawnslighthouse/574359',\r\n  },\r\n];\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","export const links = [\r\n  {id: 1, title: 'Email', url: 'mailto:scostadavid@proton.me', urlText: 'scostadavid@proton.me'},\r\n  {id: 2, title: 'Linkedin', url: 'https://linkedin.com/in/scostadavid', urlText: 'in/scostadavid'},\r\n  {id: 3, title: 'Gituhb', url: 'https://github.com/scostadavid', urlText: 'gh/scostadavid'},\r\n];\r\n","import React from 'react';\nimport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph\n} from '../components/Typography';\nimport Header from '../components/Header';\nimport { Footer } from '../components/Footer';\nimport { Button } from '../components/ui/Button';\nimport { projects } from '../data/projects';\nimport {AnimatePresence, motion} from 'framer-motion';\nimport { links } from '../data/contact';\n\nconst AboutSection = (): JSX.Element => (\n  <section className=\"text-slate-200 bg-[#fff]\">\n    <div className=\"max-w-xl mx-auto p-4\">\n      <p className=\"text-black mb-4\">Hi my name is</p>\n      <H1 text={'David Costa, i’m a Software Developer'} />\n      <Paragraph>\n      Currently developing web and mobile wellness solutions with React, Node, Rails, and AWS at <a href=\"https://gogood.com.br\" target=\"_blank\" rel=\"noreferrer noopener\" className=\"hover:cursor-pointer text-[#005aee]\">GoGood Software</a>.\n      </Paragraph>\n      <Button>\n        <a className=\"text-black font-bold\" rel=\"noopener noreferrer\" href=\"https://linkedin.com/in/scostadavid\" target=\"_blank\">\n          <TypeMachineParagraph quote={'Let\\'s connect'}/>\n        </a>\n      </Button>\n    </div>\n  </section>\n);\n\nexport const Projects = (): JSX.Element => {\n  return (\n    <div className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <H2 text=\"Projects\" className=\"text-[#005aee]\" />\n        <ul>\n          {projects.map(({id, title, description, url}) => (\n            <motion.li\n            whileHover={{ scale: 1.02 }} className=\"bg-[#f1f1f1] mb-2 p-2 rounded-md\" key={'pj-' + id}>\n              <a href={url} target={'_blank'} rel={'noreferrer noopener'} className=\"mr-4 text-black hover:text-[#005aee] font-black\">\n                {title}\n                <span className=\"text-black font-normal\">\n                {' - '}{description}\n                </span>\n              </a>\n            </motion.li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport const Contact = (): JSX.Element => {\n  return (\n    <div className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <H2 text=\"Contact\" className=\"text-[#005aee]\" />\n        <ul>\n        {links.map(({id, title, urlText, url}) => (\n            <li className=\" text-black\" key={'pj-' + id}>\n              <a href={url} target={'_blank'} rel={'noreferrer noopener'} className=\"mr-4 text-black hover:text-[#005aee] font-black\">\n                {title}\n                <span className=\"text-black font-normal\">\n                {' - '}{urlText}\n                </span>\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst IndexPage = (): JSX.Element => {\n  return (\n    <>\n      <title>scostadavid</title>\n      <Header/>\n      <AboutSection />\n      <Projects/>\n      <Contact/>\n      <Footer/>\n    </>\n  );\n}\n\nexport default IndexPage;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["H1","_ref","className","text","React","classNames","H2","_ref2","Paragraph","_ref3","children","Span","_ref4","TypeMachineParagraph","_ref5","quote","index","setIndex","useState","useEffect","interval","setInterval","clearInterval","substring","Link","to","Footer","href","target","rel","Button","projects","id","title","description","url","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","jsx","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","charAt","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","links","urlText","AboutSection","Projects","li","Contact","IndexPage","Header","hasOwn","classes","arg","appendClass","parseValue","apply","newClass","module","exports"],"sourceRoot":""}