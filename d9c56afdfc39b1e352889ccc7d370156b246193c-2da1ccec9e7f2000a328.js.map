{"version":3,"file":"d9c56afdfc39b1e352889ccc7d370156b246193c-2da1ccec9e7f2000a328.js","mappings":"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","sources":["webpack://scostadavid.github.io/./src/components/Header/index.tsx","webpack://scostadavid.github.io/./src/components/Footer/index.tsx","webpack://scostadavid.github.io/./src/components/Layout/index.tsx","webpack://scostadavid.github.io/./src/components/Typography/index.tsx","webpack://scostadavid.github.io/./src/components/ui/Button/index.tsx","webpack://scostadavid.github.io/./src/data/contact.ts","webpack://scostadavid.github.io/./src/data/projects.ts","webpack://scostadavid.github.io/./node_modules/classnames/index.js","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Button } from \"../ui/Button\";\nimport { Span } from \"../Typography\";\n\nexport const Header = ({theme, toggleTheme}: any): JSX.Element => {\n  return (\n    <header className=\" items-center\">\n      <div className=\"flex flex-row justify-between max-w-xl px-8 pt-8 pb-8 mx-auto\">\n        <Link to=\"/\" className=\"text-cta font-bold text-2xl align-middle self-center\">\n          {'scostadavid'}\n        </Link>\n        {/* <nav>\n          <Link to=\"/\" className=\"text-cta text-lg mr-4\">\n            {'home'}\n          </Link>\n          <Link to=\"/blog\" className=\"text-cta text-lg\">\n            {'blog'}\n          </Link>\n        </nav> */}\n        {/* <Button className=\"bg-transparent hover:bg-transparent\" onClick={toggleTheme}>\n          {theme === 'dark' ?\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#e0d84c\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-sun text-cta-text\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line></svg>\n          :\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#624ce0\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-moon text-cta-text\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg>\n          }\n        </Button> */}\n\n        <Button className=\"bg-transparent hover:bg-transparent relative w-5 h-5\" onClick={toggleTheme}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            className={`feather feather-sun absolute transition-all duration-500 ease-in-out ${theme === 'dark' ? 'opacity-100 transform scale-100 rotate-0 text-cta' : 'opacity-0 transform scale-0 rotate-45 text-cta'}`}\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n            <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n            <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n            <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n            <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n            <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n            <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n            <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n            <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n          </svg>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            className={`feather feather-moon absolute transition-all duration-500 ease-in-out ${theme === 'dark' ? 'opacity-0 transform scale-0 rotate-45 text-cta' : 'opacity-100 transform scale-100 rotate-0 text-cta'}`}\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n          </svg>\n        </Button>\n      </div>\n    </header>\n  )\n}\n","import React from 'react';\nimport { H2 } from '../Typography';\n\nexport const Footer = (): JSX.Element => {\n  return (\n    <footer className=\"\">\n      <div className=\"max-w-xl mx-auto px-8 pt-8 pb-8\">\n        <a className=\"text-content\" href={'https://github.com/scostadavid'} target={'_blank'} rel={'noreferrer noopener'}>\n          &copy; 2024{' - '}scostadavid\n        </a>\n      </div>\n    </footer>\n  )\n}","import React, {useEffect, useState} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport {Header} from \"../Header\"\r\nimport {Footer} from \"../Footer\"\r\nimport \"../../styles/global.css\"\r\n\r\nexport const Layout = ({ children }: any) => {\r\n  const [theme, setTheme] = useState<string>(\"dark\");\r\n\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem('theme');\r\n    if (storedTheme) {\r\n      setTheme(storedTheme);\r\n      return;\r\n    }\r\n    localStorage.setItem('theme', theme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.remove('light', 'dark');\r\n    document.body.classList.add(theme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-background\">\r\n      <Header theme={theme} toggleTheme={toggleTheme}/>\r\n      <main className=\"h-full\">\r\n      {children}\r\n      </main>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\ninterface H1 {\n  className?: string;\n  children?: JSX.Element;\n  text: string;\n}\n\nconst H1 = ({className, children, text} : H1) => {\n  return (\n    <h1 className={\n      classNames(\n        \"text-content font-bold text-3xl mb-4\",\n        className\n      )\n    }>\n      {children}\n      {text}\n    </h1>\n  );\n}\n\ninterface H2 {\n  className?: string;\n  text: string;\n}\n\nconst H2 = ({className, text} : H2) => {\n  return (\n    <h2 className={\n      classNames(\n        \"font-bold text-2xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h2>\n  );\n}\n\nconst Paragraph = ({children} : {children: string}) => {\n  return (\n    <p className=\"text-content text-lg mb-4\">\n      {children}\n    </p>\n  );\n}\n\ninterface Span {\n  className?: string,\n  children?: JSX.Element | string\n}\nconst Span = ({className, children} : Span) => {\n  return (\n    <span className={\n      classNames(\n        className\n      )\n    }>\n      {children}\n    </span>\n  );\n}\n\nconst MS_INTERVAL: number = 50;\n\ninterface TypeMachineParagraph {\n  quote: string\n};\nconst TypeMachineParagraph = ({quote}: TypeMachineParagraph): JSX.Element => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setIndex(index + 1), MS_INTERVAL);\n    return () => clearInterval(interval);\n  }, [index]);\n\n  return (\n    <>\n      <Span>{' 👋 '}</Span>\n      {quote.substring(0, index)}\n    </>\n  );\n}\n\nexport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph,\n  Span,\n}","import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport const Button = ({className, children, onClick}: {className?: string, children: JSX.Element | string, onClick?: any}) => {\r\n  return (\r\n    <button\r\n      className={\r\n        classNames(\r\n          \"bg-cta text-white font-bold rounded\",\r\n          \"py-2 px-4 rounded\",\r\n          className\r\n        )\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","export const links = [\r\n  {id: 1, title: 'Email', url: 'mailto:scostadavid@proton.me', urlText: 'scostadavid@proton.me'},\r\n  {id: 2, title: 'Linkedin', url: 'https://linkedin.com/in/scostadavid', urlText: 'in/scostadavid'},\r\n  {id: 3, title: 'Gituhb', url: 'https://github.com/scostadavid', urlText: 'gh/scostadavid'},\r\n];\r\n","export const projects = [\r\n  {\r\n    id: 1,\r\n    title: '⚜️ Scout',\r\n    description: 'A lightweight tool to monitor the status of your web services',\r\n    url: 'https://github.com/scostadavid/scout',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '🦎 Chameleon',\r\n    description: 'A URL shortener that helps digital marketers track campaigns performance',\r\n    url: 'https://github.com/scostadavid/chameleon',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '🎯 Focus Nook',\r\n    description: 'A productivity app that helps users focus and complete tasks more efficiently',\r\n    url: 'https://scostadavid.github.io/focusnook/',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '🕹️ Dawn\\'s Lighthouse',\r\n    description: 'A platformer game about a sailor trapped in a lighthouse',\r\n    url: 'https://gamejolt.com/games/dawnslighthouse/574359',\r\n  },\r\n];\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["Header","_ref","theme","toggleTheme","React","className","Link","to","Button","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","d","Footer","href","target","rel","Layout","children","setTheme","useState","useEffect","storedTheme","localStorage","getItem","setItem","document","body","classList","remove","add","H1","text","classNames","H2","_ref2","Paragraph","_ref3","Span","_ref4","links","id","title","url","urlText","projects","description","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","process","has","push","index","indexOf","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","jsx","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","progress","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}