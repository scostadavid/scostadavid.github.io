{"version":3,"file":"component---src-pages-index-tsx-86763770d70d18569df5.js","mappings":"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","sources":["webpack://scostadavid.github.io/./src/components/ui/button.tsx","webpack://scostadavid.github.io/./src/components/header.tsx","webpack://scostadavid.github.io/./src/components/footer.tsx","webpack://scostadavid.github.io/./src/components/layout.tsx","webpack://scostadavid.github.io/./src/components/post-list.tsx","webpack://scostadavid.github.io/./src/hooks/useSiteMetada.ts","webpack://scostadavid.github.io/./src/components/seo.tsx","webpack://scostadavid.github.io/./src/components/typography.tsx","webpack://scostadavid.github.io/./src/data/projects.ts","webpack://scostadavid.github.io/./src/images/bk.webp","webpack://scostadavid.github.io/./src/images/tc.webp","webpack://scostadavid.github.io/./src/data/techs.ts","webpack://scostadavid.github.io/./src/pages/index.tsx","webpack://scostadavid.github.io/./node_modules/classnames/index.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onClick?: any;\r\n}\r\n\r\nexport const Button = ({className, children, onClick}: ButtonProps) => {\r\n  return (\r\n    <button\r\n      className={\r\n        classNames(\r\n          \"bg-cta text-white font-bold rounded\",\r\n          \"py-2 px-4 rounded\",\r\n          className\r\n        )\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { Button } from \"./ui/button\";\n\nexport const Header = ({ theme, toggleTheme }: any): JSX.Element => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const handleThemeSelect = (selectedTheme: string) => {\n    toggleTheme(selectedTheme);\n    setIsMenuOpen(false);\n  };\n\n  return (\n    <header className=\"items-center\">\n      <div className=\"flex flex-row justify-between max-w-4xl mx-auto px-8 py-8 relative\">\n        <Link to=\"/\" className=\"text-cta font-bold text-2xl align-middle self-center\">\n        👨‍💻 {'scostadavid'}\n        </Link>\n\n        <div className=\"relative\">\n          <Button \n            aria-label=\"theme-switcher\" \n            className=\"flex border border-neutral-200 dark:border-neutral-800 bg-transparent text-content hover:text-content/100 relative justify-center items-center align-middle w-10 h-10 rounded transition-colors\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n          >\n            {/* Moon icon for dark mode */}\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              className={`absolute transition-all duration-300 ease-in-out ${\n                theme === 'dark' ? 'opacity-100 rotate-0' : 'opacity-0 rotate-90'\n              }`}\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n            </svg>\n\n            {/* Sun icon for light mode */}\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              className={`absolute transition-all duration-300 ease-in-out ${\n                theme === 'light' ? 'opacity-100 text-content rotate-0' : 'opacity-0 -rotate-90'\n              }`}\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"y\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n              <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n              <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n              <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n              <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n              <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n              <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n              <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n              <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n            </svg>\n          </Button>\n\n          {/* Menu de temas */}\n          {isMenuOpen && (\n            <div className=\"absolute right-0 mt-2 w-32 bg-background border border-neutral-200 dark:border-neutral-800 rounded-lg shadow-lg z-50\">\n              <div className=\"p-2 space-y-2\">\n                <button\n                  onClick={() => handleThemeSelect('light')}\n                  className=\"w-full text-content flex items-center gap-2 px-3 py-2 text-sm hover:bg-card rounded-md transition-colors\"\n                >\n                  <span className=\"w-4 h-4\">☀️</span>\n                  Light\n                </button>\n                <button\n                  onClick={() => handleThemeSelect('dark')}\n                  className=\"w-full text-content flex items-center gap-2 px-3 py-2 text-sm hover:bg-card rounded-md transition-colors\"\n                >\n                  <span className=\"w-4 h-4\">🌙</span>\n                  Dark\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nexport const Footer = () => {\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <footer className=\"w-full border-t border-neutral-200 dark:border-neutral-800 pb-6 pt-12\">\n      <div className=\"mx-auto flex max-w-4xl flex-col items-center gap-8 px-4 sm:items-start sm:gap-10\">\n        <div className=\"grid w-full justify-center gap-6 sm:grid-cols-2 sm:justify-between sm:gap-10\">\n          {/* Left Column */}\n          <div className=\"flex flex-col gap-4\">\n            <Link \n              to=\"/\" \n              className=\"text-center text-xl font-bold tracking-tight text-highlight sm:text-left\"\n            >\n              David Costa\n            </Link>\n            <p className=\"max-w-64 text-center text-sm text-content sm:text-left\">\n              Computer Science graduate from São Paulo State University with over 4 years of problem solving experience\n            </p>\n          </div>\n\n          {/* Right Column - Social Links */}\n          <div className=\"flex flex-col items-center gap-4 sm:items-start\">\n            <h3 className=\"font-semibold text-content\">Connect with me</h3>\n            <ul className=\"flex flex-col gap-2\">\n              {[\n                {\n                  name: 'GitHub',\n                  url: 'https://github.com/scostadavid',\n                  icon: (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12.001 2C6.47598 2 2.00098 6.475 2.00098 12C2.00098 16.425 4.86348 20.1625 8.83848 21.4875C9.33848 21.575 9.52598 21.275 9.52598 21.0125C9.52598 20.775 9.51348 19.9875 9.51348 19.15C7.00098 19.6125 6.35098 18.5375 6.15098 17.975C6.03848 17.6875 5.55098 16.8 5.12598 16.5625C4.77598 16.375 4.27598 15.9125 5.11348 15.9C5.90098 15.8875 6.46348 16.625 6.65098 16.925C7.55098 18.4375 8.98848 18.0125 9.56348 17.75C9.65098 17.1 9.91348 16.6625 10.201 16.4125C7.97598 16.1625 5.65098 15.3 5.65098 11.475C5.65098 10.3875 6.03848 9.4875 6.67598 8.7875C6.57598 8.5375 6.22598 7.5125 6.77598 6.1375C6.77598 6.1375 7.61348 5.875 9.52598 7.1625C10.326 6.9375 11.176 6.825 12.026 6.825C12.876 6.825 13.726 6.9375 14.526 7.1625C16.4385 5.8625 17.276 6.1375 17.276 6.1375C17.826 7.5125 17.476 8.5375 17.376 8.7875C18.0135 9.4875 18.401 10.375 18.401 11.475C18.401 15.3125 16.0635 16.1625 13.8385 16.4125C14.201 16.725 14.5135 17.325 14.5135 18.2625C14.5135 19.6 14.501 20.675 14.501 21.0125C14.501 21.275 14.6885 21.5875 15.1885 21.4875C19.259 20.1133 21.9999 16.2963 22.001 12C22.001 6.475 17.526 2 12.001 2Z\"/>\n                    </svg>\n                  )\n                },\n                {\n                  name: 'LinkedIn',\n                  url: 'https://linkedin.com/in/scostadavid',\n                  icon: (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M18.3362 18.339H15.6707V14.1622C15.6707 13.1662 15.6505 11.8845 14.2817 11.8845C12.892 11.8845 12.6797 12.9683 12.6797 14.0887V18.339H10.0142V9.75H12.5747V10.9207H12.6092C12.967 10.2457 13.837 9.53325 15.1367 9.53325C17.8375 9.53325 18.337 11.3108 18.337 13.6245V18.339H18.3362ZM7.00373 8.57475C6.14573 8.57475 5.45648 7.88025 5.45648 7.026C5.45648 6.1725 6.14648 5.47875 7.00373 5.47875C7.85873 5.47875 8.55173 6.1725 8.55173 7.026C8.55173 7.88025 7.85798 8.57475 7.00373 8.57475ZM8.34023 18.339H5.66723V9.75H8.34023V18.339ZM19.6697 3H4.32923C3.59498 3 3.00098 3.5805 3.00098 4.29675V19.7033C3.00098 20.4202 3.59498 21 4.32923 21H19.6675C20.401 21 21.001 20.4202 21.001 19.7033V4.29675C21.001 3.5805 20.401 3 19.6675 3H19.6697Z\"/>\n                    </svg>\n                  )\n                },\n                {\n                  name: 'Email',\n                  url: 'mailto:me@scostadavid.dev',\n                  icon: (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.6418 20 15.1681 19.5054 16.4381 18.6571L17.5476 20.3214C15.9602 21.3818 14.0523 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13.5C22 15.433 20.433 17 18.5 17C17.2958 17 16.2336 16.3918 15.6038 15.4659C14.6942 16.4115 13.4158 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1258 7 14.1647 7.37209 15.0005 8H17V13.5C17 14.3284 17.6716 15 18.5 15C19.3284 15 20 14.3284 20 13.5V12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\"/>\n                    </svg>\n                  )\n                }\n              ].map((link) => (\n                <li key={link.name}>\n                  <a\n                    href={link.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex w-fit gap-4 text-sm text-content transition-colors hover:text-highlight\"\n                  >\n                    <span className=\"h-4 w-4\">{link.icon}</span>\n                    <div>{link.name}</div>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        {/* Divider */}\n        <div className=\"border-t border-neutral-200 dark:border-neutral-800\" />\n\n        {/* Bottom Row */}\n        <div className=\"flex w-full flex-col-reverse items-center justify-between gap-4 sm:flex-row\">\n          <p className=\"text-center text-sm text-content sm:text-left\">\n            © {new Date().getFullYear()} David Costa. All rights reserved.\n          </p>\n          \n          <button \n            onClick={scrollToTop}\n            className=\"flex h-9 w-9 items-center justify-center rounded-md border border-neutral-200 dark:border-neutral-800 text-cta transition-all hover:bg-card/10 hover:text-highlight active:scale-95\"\n          >\n           ^\n          </button>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React, {useEffect, useState} from \"react\"\r\nimport {Header} from \"./header\"\r\nimport {Footer} from \"./footer\";\r\nimport \"../styles/global.css\"\r\n\r\nexport const Layout = ({ children }: any) => {\r\n  const [theme, setTheme] = useState<string>(\"dark\");\r\n\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem(\"theme\") || \"dark\";\r\n    setTheme(storedTheme);\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(storedTheme);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"theme\", theme);\r\n    }\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = (selectedTheme: string) => {\r\n    setTheme(selectedTheme);\r\n    localStorage.setItem(\"theme\", selectedTheme);\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(selectedTheme);\r\n  };  \r\n\r\n  return (\r\n    <div className={`bg-background min-h-screen ${theme}`}>\r\n      <Header theme={theme} toggleTheme={toggleTheme} />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Link } from 'gatsby';\n\ninterface Post {\n  id: string;\n  frontmatter: {\n    title: string;\n    date: string;\n    description?: string;\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface PostListProps {\n  posts: Post[];\n  limit?: number;\n}\n\nexport const PostList: React.FC<PostListProps> = ({ posts, limit }) => {\n  // Agrupar posts por ano\n  const groupedPosts = posts.reduce((acc, post) => {\n    const year = new Date(post.frontmatter.date).getFullYear().toString();\n    if (!acc[year]) {\n      acc[year] = [];\n    }\n    acc[year].push(post);\n    return acc;\n  }, {} as Record<string, Post[]>);\n\n  // Ordenar anos de forma decrescente\n  const years = Object.keys(groupedPosts).sort((a, b) => Number(b) - Number(a));\n\n  return (\n    <div className=\"group/container transition-all\">\n      {years.map((year) => (\n        <div \n          key={year}\n          className=\"flex flex-col justify-start sm:flex-row w-full sm:justify-between border-t border-neutral-200 dark:border-neutral-800 sm:gap-20 group/list text-neutral-600 dark:text-neutral-400 transition-all\"\n        >\n          <h2 className=\"h-12 w-fit flex items-center justify-center text-sm\">\n            {year}\n          </h2>\n          \n          <div className=\"lg:max-w-lg w-full flex flex-col gap-1 last:pb-1\">\n            {groupedPosts[year].map((post, index) => (\n              <Link\n                key={post.id}\n                to={`/blog/${post.fields.slug}`}\n                className=\"flex flex-row items-center justify-between py-3 border-neutral-200 dark:border-neutral-800 sm:first:border-t-0 group-last/list:border-b group/item transition-all gap-2\"\n              >\n                <span className=\"text-neutral-950 dark:text-neutral-50 hover:text-neutral-400 transition-all w-full\">\n                  {post.frontmatter.title}\n                </span>\n                \n                <time \n                  dateTime={new Date(post.frontmatter.date).toISOString()}\n                  className=\"text-sm\"\n                >\n                  {new Date(post.frontmatter.date).toLocaleDateString(undefined, {\n                    day: '2-digit',\n                    month: '2-digit'\n                  })}\n                </time>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/useSiteMetada\"\r\n\r\ninterface SEO { title?: string, description?: string, pathname?: string, children?: any };\r\n\r\nexport const SEO = ({ title, description, pathname, children }: SEO) => {\r\n  const { title: defaultTitle, description: defaultDescription, siteUrl, } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content=\"scostadavid blog, software developer\"/>\r\n      <meta name=\"keywords\" content=\"scostadavid, David Costa, software developer, full stack, portfolio, projects, skills, experience\"/>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n      <meta name=\"author\" content=\"David Costa\"/>\r\n      \r\n      <meta name=\"description\" content={seo.description} />\r\n      {/* <meta name=\"image\" content={seo.image} /> */}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      {/* <meta name=\"twitter:image\" content={seo.image} /> */}\r\n      {/* <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\r\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👨‍💻</text></svg>\" />\r\n      {children}\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\ninterface H1 {\n  className?: string;\n  children?: React.ReactNode | string;\n}\n\nconst H1 = ({className, children} : H1) => {\n  return (\n    <h1 className={\n      classNames(\n        \"text-content font-bold text-3xl mb-4\",\n        className\n      )\n    }>\n      {children}\n    </h1>\n  );\n}\n\ninterface H2 {\n  className?: string;\n  text: string;\n}\n\nconst H2 = ({className, text} : H2) => {\n  return (\n    <h2 className={\n      classNames(\n        \"font-bold text-2xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h2>\n  );\n}\n\nconst Paragraph = ({children} : {children: string}) => {\n  return (\n    <p className=\"text-content text-lg mb-4\">\n      {children}\n    </p>\n  );\n}\n\ninterface Span {\n  className?: string,\n  children?: JSX.Element | string\n}\nconst Span = ({className, children} : Span): JSX.Element => {\n  return (\n    <span className={\n      classNames(\n        className\n      )\n    }>\n      {children}\n    </span>\n  );\n}\n\nconst MS_INTERVAL: number = 50;\n\ninterface TypeMachineParagraph {\n  quote: string\n};\nconst TypeMachineParagraph = ({quote}: TypeMachineParagraph): JSX.Element => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setIndex(index + 1), MS_INTERVAL);\n    return () => clearInterval(interval);\n  }, [index]);\n\n  return (\n    <>\n      <Span>{' 👋 '}</Span>\n      {quote.substring(0, index)}\n    </>\n  );\n}\n\nexport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph,\n  Span,\n}","import bk from '../images/bk.webp';\r\nimport tc from '../images/tc.webp';\r\n\r\nexport const projects = [\r\n  {\r\n    id: 0,\r\n    title: '📦 Byte Kit',\r\n    description: 'Everyday developer tools to make your programming easier',\r\n    url: 'https://bytekit.xyz',\r\n    status: \"available\",\r\n    image: bk\r\n  },\r\n  // {\r\n  //   id: 1,\r\n  //   title: '💪 Gym Logger',\r\n  //   description: 'An app to track your workout consistency with ease',\r\n  //   url: 'https://gymlogger.xyz',\r\n  //   status: \"coming-soon\"\r\n  // },\r\n  {\r\n    id: 2,\r\n    title: '🎱 The Challengers',\r\n    description: 'Grab your cue and take part in a pool based adventure game',\r\n    url: \"#\",\r\n    status: \"coming-soon\",\r\n    image: tc,\r\n  }\r\n];\r\n","export default __webpack_public_path__ + \"static/bk-04dade530a402e3e5f90852f83165082.webp\";","export default __webpack_public_path__ + \"static/tc-36dbb4e29efe2889b37f94cb65427633.webp\";","import { \n    AWS, CSharp, Docker, DotNet, Golang, Linux, Mongodb, NodeJs, Postgres, Rails, ReactJS, Ruby, Typescript\n} from '../icons';\n\nexport const techs = [\n    {\n      icon: Golang,\n      title: 'Golang',\n      backgroundColor: '#00acd770',\n      borderColor: '#00acd7a0',\n    },\n    {\n      icon: Typescript,\n      title: 'Typescript',\n      backgroundColor: '#007acc70',\n      borderColor: '#007acc70',\n    },\n    {\n      icon: CSharp,\n      title: 'C-Sharp',\n      backgroundColor: '#9B4F9670',\n      borderColor: '#9B4F96a0',\n    },\n    {\n      icon: Ruby,\n      title: 'Ruby',\n      backgroundColor: '#d9140470',\n      borderColor: '#d91404a0',\n    },\n    {\n      icon: DotNet,\n      title: '.NET',\n      backgroundColor: '#1384C870',\n      borderColor: '#1384C8a0',\n    },\n    {\n      icon: AWS,\n      title: 'AWS',\n      backgroundColor: '#FF990070',\n      borderColor: '#FF9900a0',\n    },\n    {\n      icon: NodeJs,\n      title: 'NodeJS',\n      backgroundColor: '#5fa04e70',\n      borderColor: '#5fa04ea0',\n    },\n    {\n      icon: Rails,\n      title: 'Rails',\n      backgroundColor: '#d9140470',\n      borderColor: '#d91404a0',\n    },\n    {\n      icon: ReactJS,\n      title: 'React',\n      backgroundColor: '#61DAFB70',\n      borderColor: '#61DAFB70',\n    },\n    {\n      icon: Postgres,\n      title: 'Postgres',\n      backgroundColor: '#33679170',\n      borderColor: '#33679170',\n    },\n    {\n      icon: Mongodb,\n      title: 'MongoDB',\n      backgroundColor: '#43993470',\n      borderColor: '#439934a0',\n    },\n    {\n      icon: Linux,\n      title: 'Linux',\n      backgroundColor: '#33333370',\n      borderColor: '#333333a0',\n    },\n    {\n      icon: Docker,\n      title: 'Docker',\n      backgroundColor: '#1384C870',\n      borderColor: '#1384C8a0',\n    },\n  ];\n","import React from 'react';\nimport {\n  H1,\n  H2, Span\n} from '../components/typography';\nimport { projects } from '../data/projects';\nimport { Layout } from '../components/layout';\nimport { SEO } from '../components/seo';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { PostList } from '../components/post-list';\nimport { techs } from '../data/techs';\nimport { Email, Github, Linkedin, Twitter } from '../icons';\n\nconst AboutSection = (): JSX.Element => {\n  const socialLinks = [\n    {\n      name: 'Linkedin',\n      url: 'https://linkedin.com/in/scostadavid',\n      icon: Linkedin,\n      hoverClass: 'hover:text-[#0A66C2]'\n    },\n    {\n      name: 'Github',\n      url: 'https://github.com/scostadavid',\n      icon: Github,\n      hoverClass: 'hover:text-highlight'\n    },\n    {\n      name: 'Twitter',\n      url: 'https://x.com/scostadavid',\n      icon: Twitter,\n      hoverClass: 'hover:text-[#1DA1F2]'\n    },\n    {\n      name: 'Email',\n      url: 'mailto:me@scostadavid.dev',\n      icon: Email,\n      hoverClass: 'hover:text-[#EA4335]'\n    }\n  ];\n\n  return (\n    <section className=\"text-slate-200\">\n      <div className=\"max-w-4xl mx-auto px-8 pt-16\">\n        <Span className=\"text-content text-lg\">Hello, I'm David Costa a</Span>\n        <H1 className=\"my-4 text-highlight\">\n          {'Software'}{' '}\n          <Span className=\"\">{'Developer'}</Span>\n        </H1>\n        <p className=\"text-cta text-lg mb-8 leading-relaxed max-w-xl\">\n          I build software and enjoy solving problems through technology.\n        </p>\n        <nav className=\"flex flex-row gap-6 align-middle flex-wrap\">\n          {socialLinks.map(({ name, url, icon: Icon, hoverClass }) => (\n            <Link\n              key={name}\n              to={url}\n              className={`flex flex-row gap-2 items-center text-content ${hoverClass} self-center transition-all duration-300 ease-in-out`}\n              target=\"_blank\"\n            >\n              <Icon className=\"w-5 h-5\" />\n              <span>{name}</span>\n            </Link>\n          ))}\n        </nav>\n      </div>\n    </section>\n  );\n};\n\n// StatusBadge.tsx\nconst StatusBadge = ({ status }: { status?: 'available' | 'coming-soon' }) => {\n  if (status === 'available') {\n    return (\n      <span className=\"inline-block text-sm text-green-400 bg-green-400/10 px-3 py-1 rounded-full\">\n        Available\n      </span>\n    );\n  }\n  if (status === 'coming-soon') {\n    return (\n      <span className=\"inline-block text-sm text-blue-400 bg-blue-400/10 px-3 py-1 rounded-full\">\n        Coming Soon\n      </span>\n    );\n  }\n  return null;\n};\n\n// ProjectCard.tsx\nconst placeholderImage = \"https://place-hold.it/1920x1080\";\n\ninterface ProjectCardProps {\n  title: string;\n  description: string;\n  url?: string;\n  image?: string;\n  status?: 'available' | 'coming-soon';\n}\n\nconst ProjectCard = ({ title, description, url, image, status }: ProjectCardProps) => (\n  <a\n    href={url}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    className=\"block group border border-neutral-200 dark:border-neutral-800 transition-all duration-300 rounded-xl shadow-lg hover:shadow-xl text-content\"\n  >\n    <div className=\"overflow-hidden rounded-t-xl\">\n      <img\n        src={image || placeholderImage}\n        alt={title}\n        className=\"object-cover w-full h-48 transition-transform duration-300 group-hover:scale-105\"\n      />\n    </div>\n    <div className=\"p-6\">\n      <h3 className=\"font-bold text-xl mb-2\">{title}</h3>\n      <p className=\"text-content/80 mb-4 group-hover:text-content/100 transition-colors\">\n        {description}\n      </p>\n      <StatusBadge status={status} />\n    </div>\n  </a>\n);\n\n// SeeMoreLink.tsx\nconst SeeMoreLink = ({ to }: { to: string }) => (\n  <Link\n    to={to}\n    className=\"text-content hover:text-highlight transition-colors\"\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n  >\n    see more\n    <span className=\"ml-2 group-hover:translate-x-1 transition-transform\">→</span>\n  </Link>\n);\n\n// Projects.tsx\nexport const Projects = (): JSX.Element => (\n  <div className=\"text-slate-200\">\n    <div className=\"max-w-4xl mx-auto px-8 pt-16\">\n      <H2 text=\"Selected Projects\" className=\"text-content mb-8\" />\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-8\">\n        {projects.map((project) => (\n          <ProjectCard\n            key={`pj-${project.id}`}\n            {...project}\n          />\n        ))}\n      </div>\n      <div className=\"mt-8\">\n        <SeeMoreLink to=\"https://github.com/scostadavid?tab=repositories\" />\n      </div>\n    </div>\n  </div>\n);\n\nexport const Skills = (): JSX.Element => {\n\n\n  return (\n    <div className=\"text-slate-200\">\n      <div className=\"max-w-4xl mx-auto px-8 py-16\">\n        <H2 text=\"Solving problems with\" className=\"text-content mb-8\" />\n        <ul className=\"flex flex-row flex-wrap gap-3\">\n          {techs.map((tech, index) => (\n            <li\n              key={index}\n              className=\"flex flex-row items-center gap-2 rounded-lg p-1 text-content\"\n              style={{\n                backgroundColor: tech.backgroundColor,\n                border: `1px solid ${tech.borderColor}`,\n              }}\n            >\n              {tech.icon && <span className=\"opacity-90\">\n                <tech.icon />\n              </span>\n              }\n              <span className=\"font-medium\">{tech.title}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n\ninterface Post {\n  id: string;\n  frontmatter: {\n    title: string;\n    date: string;\n    description?: string;\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface IndexPageProps extends PageProps {\n  data: {\n    allMarkdownRemark: {\n      nodes: Post[];\n    };\n  };\n}\n\nconst Blog: React.FC<IndexPageProps> = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <section className=\"text-slate-200\">\n      <div className=\"max-w-4xl mx-auto px-8 pt-16\">\n        <H2 text=\"Blog\" className=\"text-content mb-8\" />        \n        <PostList posts={posts} limit={3}/>\n      </div>\n    </section>\n  );\n};\n\nconst IndexPage: React.FC<IndexPageProps> = ({ data }) => {\n  return (\n    <>\n      <title>scostadavid | software developer</title>\n\n      <Layout>\n        <AboutSection />\n        <Blog data={data} />\n        <Projects/>\n        <Skills />\n      </Layout>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <>\n    <html lang=\"en\" />\n    <SEO />\n  </>\n)","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Button","_ref","className","children","onClick","React","classNames","Header","theme","toggleTheme","isMenuOpen","setIsMenuOpen","useState","handleThemeSelect","selectedTheme","Link","to","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","y","cx","cy","r","x1","y1","x2","y2","Footer","name","url","icon","map","link","key","href","target","rel","Date","getFullYear","scrollToTop","window","scrollTo","top","behavior","Layout","setTheme","useEffect","storedTheme","localStorage","getItem","document","body","classList","remove","add","setItem","PostList","posts","limit","groupedPosts","reduce","acc","post","year","frontmatter","date","toString","push","years","Object","keys","sort","a","b","Number","index","id","fields","slug","title","dateTime","toISOString","toLocaleDateString","undefined","day","month","SEO","description","pathname","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","content","H1","H2","_ref2","text","Span","_ref4","projects","status","image","techs","Golang","backgroundColor","borderColor","Typescript","CSharp","Ruby","DotNet","AWS","NodeJs","Rails","ReactJS","Postgres","Mongodb","Linux","Docker","AboutSection","socialLinks","Linkedin","hoverClass","Github","Twitter","Email","Icon","StatusBadge","ProjectCard","_ref3","src","alt","SeeMoreLink","Projects","project","assign","Skills","tech","style","border","Blog","_ref5","data","allMarkdownRemark","nodes","_ref6","Head","lang","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","prototype","includes","call","value","newClass","module","exports","default"],"sourceRoot":""}