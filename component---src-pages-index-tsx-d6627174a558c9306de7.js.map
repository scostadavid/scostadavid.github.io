{"version":3,"file":"component---src-pages-index-tsx-d6627174a558c9306de7.js","mappings":"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","sources":["webpack://scostadavid.github.io/./src/components/Typography/index.tsx","webpack://scostadavid.github.io/./src/components/Header/index.tsx","webpack://scostadavid.github.io/./src/components/Footer/index.tsx","webpack://scostadavid.github.io/./src/components/ui/Button/index.tsx","webpack://scostadavid.github.io/./src/data/projects.ts","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://scostadavid.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://scostadavid.github.io/./src/data/contact.ts","webpack://scostadavid.github.io/./src/pages/index.tsx","webpack://scostadavid.github.io/./node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\ninterface H1 {\n  className?: string;\n  children?: JSX.Element;\n  text: string;\n}\n\nconst H1 = ({className, children, text} : H1) => {\n  return (\n    <h1 className={\n      classNames(\n        \"text-black font-bold text-5xl mb-4\",\n        className\n      )\n    }>\n      {children}\n      {text}\n    </h1>\n  );\n}\n\ninterface H2 {\n  className?: string;\n  text: string;\n}\n\nconst H2 = ({className, text} : H2) => {\n  return (\n    <h2 className={\n      classNames(\n        \"font-bold text-2xl mb-4\",\n        className\n      )\n    }>\n      {text}\n    </h2>\n  );\n}\n\nconst Paragraph = ({children} : {children: string}) => {\n  return (\n    <p className=\"text-black text-lg mb-4\">\n      {children}\n    </p>\n  );\n}\n\ninterface Span {\n  className?: string,\n  children?: JSX.Element | string\n}\nconst Span = ({className, children} : Span) => {\n  return (\n    <span className={\n      classNames(\n        \"text-black\",\n        className\n      )\n    }>\n      {children}\n    </span>\n  );\n}\n\nconst MS_INTERVAL: number = 50;\n\ninterface TypeMachineParagraph {\n  quote: string\n};\nconst TypeMachineParagraph = ({quote}: TypeMachineParagraph): JSX.Element => {\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setIndex(index + 1), MS_INTERVAL);\n    return () => clearInterval(interval);\n  }, [index]);\n\n  return (\n    <>\n      <Span>{' 👋 '}</Span>\n      {quote.substring(0, index)}\n    </>\n  );\n}\n\nexport {\n  H1,\n  H2,\n  Paragraph,\n  TypeMachineParagraph,\n  Span,\n}","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport default (): JSX.Element => {\n  return (\n    <header className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"flex flex-row max-w-xl p-4 mx-auto\">\n        <Link to=\"/\">\n          <p className=\"text-[#005aee] font-bold text-2xl\">{'scostadavid'}</p>\n        </Link>\n      </div>\n    </header>\n  )\n}","import React from 'react';\nimport { H2 } from '../Typography';\n\nexport const Footer = (): JSX.Element => {\n  return (\n    <footer className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <a className=\"text-black\" href={'https://github.com/scostadavid'} target={'_blank'} rel={'noreferrer noopener'}>\n          &copy; 2024{' - '}scostadavid\n        </a>\n      </div>\n    </footer>\n  )\n}","import React from 'react';\r\n\r\nexport const Button = ({children}: {children: JSX.Element | string}) => {\r\n  return (\r\n    <button\r\n      className=\" border-black border-2 p-4 bg-[#fff] hover:bg-[#fff] hover:shadow-[2px_2px_0px_rgba(0,0,0,1)] active:bg-[#fff] rounded-md\"\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","export const projects = [\r\n  {\r\n    id: 1,\r\n    title: '🦎 Chameleon',\r\n    description: 'A URL shortener that helps digital marketers track campaigns performance',\r\n    url: 'https://github.com/scostadavid/chameleon',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '🎯 Focus Nook',\r\n    description: 'A productivity app that helps users focus and complete tasks more efficiently',\r\n    url: 'https://scostadavid.github.io/focusnook/',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '🦐 Shrimp.css',\r\n    description: 'A CSS framework that makes it easy to style markdown-generated HTML pages',\r\n    url: 'https://scostadavid.github.io/shrimp.css',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '🕹️ Dawn\\'s Lighthouse',\r\n    description: 'A platformer game about a sailor trapped in a lighthouse',\r\n    url: 'https://gamejolt.com/games/dawnslighthouse/574359',\r\n  },\r\n];\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","export const links = [\r\n  {id: 1, title: 'Email', url: 'mailto:scostadavid@proton.me', urlText: 'scostadavid@proton.me'},\r\n  {id: 2, title: 'Linkedin', url: 'https://linkedin.com/in/scostadavid', urlText: 'in/scostadavid'},\r\n  {id: 3, title: 'Gituhb', url: 'https://github.com/scostadavid', urlText: 'gh/scostadavid'},\r\n];\r\n","import React from 'react';\nimport {\n  H1,\n  H2,\n  Paragraph,\n  Span,\n  TypeMachineParagraph\n} from '../components/Typography';\nimport Header from '../components/Header';\nimport { Footer } from '../components/Footer';\nimport { Button } from '../components/ui/Button';\nimport { projects } from '../data/projects';\nimport {AnimatePresence, motion} from 'framer-motion';\nimport { links } from '../data/contact';\n\nconst AboutSection = (): JSX.Element => (\n  <section className=\"text-slate-200 bg-[#fff]\">\n    <div className=\"max-w-xl mx-auto p-4\">\n      <p className=\"text-black mb-4\">Hi my name is</p>\n      <H1 text={'David Costa, i’m a Software Developer'} />\n      <Paragraph>\n      Currently developing full-stack web and mobile wellness solutions with React, Node, Rails, and AWS at <a href=\"https://gogood.com.br\" target=\"_blank\" rel=\"noreferrer noopener\" className=\"hover:cursor-pointer text-[#005aee]\">GoGood Software</a>.\n      </Paragraph>\n      <Button>\n        <a className=\"text-black font-bold\" rel=\"noopener noreferrer\" href=\"https://linkedin.com/in/scostadavid\" target=\"_blank\">\n          <Span>Let's connect</Span>\n        </a>\n      </Button>\n    </div>\n  </section>\n);\n\nexport const Projects = (): JSX.Element => {\n  return (\n    <div className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <H2 text=\"Projects\" className=\"text-[#005aee]\" />\n        <ul>\n          {projects.map(({id, title, description, url}) => (\n            <motion.li\n            whileHover={{ scale: 1.02 }} className=\"bg-[#f1f1f1] mb-2 p-2 rounded-md\" key={'pj-' + id}>\n              <a href={url} target={'_blank'} rel={'noreferrer noopener'} className=\"mr-4 text-black hover:text-[#005aee] font-black\">\n                {title}\n                <span className=\"text-black font-normal\">\n                {' - '}{description}\n                </span>\n              </a>\n            </motion.li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport const Contact = (): JSX.Element => {\n  return (\n    <div className=\"text-slate-200  bg-[#fff]\">\n      <div className=\"max-w-xl mx-auto p-4\">\n        <H2 text=\"Contact\" className=\"text-[#005aee]\" />\n        <ul>\n        {links.map(({id, title, urlText, url}) => (\n            <li className=\" text-black mb-2\" key={'pj-' + id}>\n              <a href={url} target={'_blank'} rel={'noreferrer noopener'} className=\"mr-4 text-black hover:text-[#005aee] font-black\">\n                {title}\n                <span className=\"text-black font-normal\">\n                {' - '}{urlText}\n                </span>\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst IndexPage = (): JSX.Element => {\n  return (\n    <>\n      <title>scostadavid</title>\n      <meta name=\"description\" content=\"Software developer\" />\n      <Header/>\n      <AboutSection />\n      <Projects/>\n      <Contact/>\n      <Footer/>\n    </>\n  );\n}\n\nexport default IndexPage;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["H1","_ref","className","children","text","React","classNames","H2","_ref2","Paragraph","_ref3","Span","_ref4","Link","to","Footer","href","target","rel","Button","projects","id","title","description","url","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","jsx","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","links","urlText","AboutSection","Projects","li","Contact","IndexPage","content","Header","hasOwn","classes","arg","appendClass","parseValue","apply","newClass","module","exports"],"sourceRoot":""}